; XIncludeFile "widgets.pbi"
;
; This code is automatically generated by the FormDesigner.
; Manual modification is possible to adjust existing commands, but anything else will be dropped when the code is compiled.
; Event procedures needs to be put in another source file.
;
Procedure.i Form(X.l,Y.l,Width.l,Height.l, Text.s, Flag.i=0, *parent=0)
  Protected g = ContainerGadget(#PB_Any, x,y,width,height, #PB_Container_Flat)
  
  SetGadgetColor(g, #PB_Gadget_BackColor, $f0f0f0)
  ProcedureReturn g
EndProcedure

Procedure AddItem(Gadget, Item.i, Text.s, Image.i=-1, sublevel.i=0)
;   With *this
;     If *this\type = #PB_GadgetType_MDI
      Protected x = 10, y = 10, width.l = 280, height.l = 180
      Static pos_x, pos_y
      OpenGadgetList(Gadget)
      Form(pos_x+x, pos_y+y, Width, Height, Text, #PB_Window_SystemMenu|#PB_Window_SizeGadget|#PB_Window_MaximizeGadget|#PB_Window_MinimizeGadget, Gadget) : CloseGadgetList()
      
;       *this\scroll\x = 0
;       *this\scroll\y = 0
;       *this\scroll\width = pos_x + x + Width
;       *this\scroll\height = pos_y + y + Height
;       
;       ; Updates(*this\scroll, *this\x, *this\y, *this\width, *this\height)
      SetGadgetAttribute(Gadget, #PB_ScrollArea_InnerWidth, pos_x + x + Width)
      SetGadgetAttribute(Gadget, #PB_ScrollArea_InnerHeight, pos_y + y + Height)
      
      pos_x + 20
      pos_y + 20+ 25
      CloseGadgetList()
;     EndIf
;   EndWith
  
  ProcedureReturn Item
EndProcedure

Procedure.i MDI(x.l,y.l,width.l,height.l, Flag.i=0) ; , Menu.i, SubMenu.l, FirstMenuItem.l)
  Protected g = ScrollAreaGadget(#PB_Any, x,y,width,height, 0,0) 
  CloseGadgetList()
  
  ProcedureReturn g
EndProcedure

;- EXAMPLE
CompilerIf #PB_Compiler_IsMainFile ;= 100
;   EnableExplicit
;   UseWidgets( )
  Global window_ide
  Global Splitter_ide, Splitter_design, splitter_debug, Splitter_inspector, splitter_help
  Global mdi_design, toolbar_design, listview_debug, text_help, tree_inspector,panel_inspector
  Global tree_elements

  Procedure window_resize()
    ResizeGadget(Splitter_ide, #PB_Ignore, #PB_Ignore, WindowWidth(EventWindow()), WindowHeight(EventWindow()))
  EndProcedure
  Procedure panel_resize()
    ResizeGadget(tree_elements, #PB_Ignore, #PB_Ignore, GetGadgetAttribute(EventGadget(), #PB_Panel_ItemWidth), GetGadgetAttribute(EventGadget(), #PB_Panel_ItemHeight))
  EndProcedure
  
    
  Define flag = #PB_Window_SystemMenu|#PB_Window_SizeGadget|#PB_Window_MaximizeGadget|#PB_Window_MinimizeGadget
  window_ide = OpenWindow(#PB_Any, 100,100,800,600, "ide", flag)
  BindEvent(#PB_Event_SizeWindow, @window_resize(), window_ide)
  
  ButtonGadget(1,0,0,0,0, "")
  ButtonGadget(2,0,0,0,0, "")
  ButtonGadget(3,0,0,0,0, "")
  ButtonGadget(4,0,0,0,0, "")
  ButtonGadget(5,0,0,0,0, "")
  ButtonGadget(6,0,0,0,0, "")
  ButtonGadget(7,0,0,0,0, "")
  
  toolbar_design = 1
;   mdi_design = ScrollAreaGadget(#PB_Any, 0,0,0,0, 600,600) 
;   
;   CloseGadgetList()
  mdi_design = MDI(0,0,0,0) 
  AddItem(mdi_design, 0, "Form_0") 
  AddItem(mdi_design, 1, "Form_1")  
  AddItem(mdi_design, 2, "Form_2")
  
  tree_inspector = TreeGadget(#PB_Any, 0,0,0,0)
  AddGadgetItem(tree_inspector, 0, "Form_0", 0, 0) 
  AddGadgetItem(tree_inspector, 1, "Form_1", 0, 1)  
  AddGadgetItem(tree_inspector, 2, "Form_2", 0, 2)
  
  listview_debug = ListViewGadget(#PB_Any, 0,0,0,0)
   AddGadgetItem(listview_debug, 0, "Form_0", 0, 0) 
  AddGadgetItem(listview_debug, 1, "Form_1", 0, 0)  
  AddGadgetItem(listview_debug, 2, "Form_2", 0, 0)
  
  panel_inspector = PanelGadget(#PB_Any, 0,0,0,0)  
  AddGadgetItem(panel_inspector, 0, "elements", 0, 0) 
  tree_elements = TreeGadget(#PB_Any, 0,0,0,0)
  AddGadgetItem(tree_elements, 0, "Button", 0, 0) 
  AddGadgetItem(tree_elements, 1, "Container", 0, 0)  
  AddGadgetItem(tree_elements, 2, "String", 0, 0)
  
  AddGadgetItem(panel_inspector, 1, "properties", 0, 0)  
  AddGadgetItem(panel_inspector, 2, "events", 0, 0)  
  CloseGadgetList()
  
  BindGadgetEvent(panel_inspector, @panel_resize())
  
  text_help  = TextGadget(#PB_Any, 0,0,0,0, "help for the inspector", #PB_Text_Border)
  
  
  
  
  
  Splitter_design = SplitterGadget(#PB_Any, 0,0,0,0, toolbar_design,mdi_design, #PB_Splitter_FirstFixed)
  splitter_debug = SplitterGadget(#PB_Any, 0,0,0,0, Splitter_design,listview_debug, #PB_Splitter_SecondFixed)
  
  Splitter_inspector = SplitterGadget(#PB_Any, 0,0,0,0, tree_inspector,panel_inspector, #PB_Splitter_FirstFixed)
  splitter_help = SplitterGadget(#PB_Any, 0,0,0,0, Splitter_inspector,text_help, #PB_Splitter_SecondFixed)
  
  Splitter_ide = SplitterGadget(#PB_Any, 0,0,800,600, splitter_debug,splitter_help, #PB_Splitter_Vertical|#PB_Splitter_SecondFixed)
  
  ; set splitter default minimum size
  SetGadgetAttribute(Splitter_ide, #PB_Splitter_FirstMinimumSize, 500)
  SetGadgetAttribute(Splitter_ide, #PB_Splitter_SecondMinimumSize, 120)
  SetGadgetAttribute(splitter_help, #PB_Splitter_SecondMinimumSize, 30)
  SetGadgetAttribute(splitter_debug, #PB_Splitter_SecondMinimumSize, 100)
  SetGadgetAttribute(Splitter_inspector, #PB_Splitter_FirstMinimumSize, 100)
  SetGadgetAttribute(Splitter_design, #PB_Splitter_FirstMinimumSize, 20)
  ;SetAttribute(Splitter_design, #PB_Splitter_SecondMinimumSize, $ffffff)
  
  ; set splitters dafault positions
  SetGadgetState(Splitter_ide, GadgetWidth(Splitter_ide)-220)
  SetGadgetState(splitter_help, GadgetHeight(splitter_help)-80)
  SetGadgetState(splitter_debug, GadgetHeight(splitter_debug)-150)
  SetGadgetState(Splitter_inspector, 200)
  SetGadgetState(Splitter_design, 30)
  
 
  Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
CompilerEndIf
; IDE Options = PureBasic 6.12 LTS (Windows - x64)
; CursorPosition = 49
; FirstLine = 45
; Folding = --
; EnableXP