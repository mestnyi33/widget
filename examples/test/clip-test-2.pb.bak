;- 
#IDE_path = "../../"
XIncludeFile #IDE_path+"widgets.pbi"

EnableExplicit

UseWidgets( )
UsePNGImageDecoder( )

#_DD_CreateNew = 1<<1
#_DD_reParent = 1<<2
#_DD_Group = 1<<3
#_DD_CreateCopy = 1<<4

;- ENUMs
; properties items
Enumeration 
   #_pi_group_0 
   #_pi_id
   #_pi_class
   #_pi_text
   
   #_pi_group_1 
   #_pi_x
   #_pi_y
   #_pi_width
   #_pi_height
   
   #_pi_group_2 
   #_pi_disable
   #_pi_hide
EndEnumeration

; events items
Enumeration 
   #_ei_leftclick
   #_ei_change
   #_ei_enter
   #_ei_leave
EndEnumeration

; toolbar buttons
Enumeration 
   #_tb_group_select = 1
   
   #_tb_group_left = 3
   #_tb_group_right
   #_tb_group_top
   #_tb_group_bottom
   #_tb_group_width
   #_tb_group_height
   
   #_tb_align_left
   #_tb_align_right
   #_tb_align_top
   #_tb_align_bottom
   #_tb_align_center
   
   #_tb_widget_paste
   #_tb_widget_delete
   #_tb_widget_copy
   #_tb_widget_cut
EndEnumeration

;- GLOBALs
Global window_ide, 
       canvas_ide

Global Splitter_ide, 
       Splitter_design, 
       splitter_debug, 
       Splitter_inspector, 
       splitter_help

Global toolbar_design, 
       listview_debug, 
       id_i_help_text

Global id_design_panel, 
       id_design_form,
       id_design_code

Global id_i_container_panel,
       id_i_view_tree, 
       id_elements_tree,
       id_i_properties_tree, 
       id_i_events_tree

Global group_select,
       group_drag


;-
; Macro ToolBar( parent, flag = #PB_ToolBar_Small )
;   Container( 0,0,0,0 ) 
; EndMacro

; Macro ToolBarButton( )
;    Button(( ( widget( )\x+widget( )\width ) ), 5,30,30,Str(MacroExpandedCount) )
; EndMacro


;-
Procedure ide_events( )
EndProcedure

Procedure ide_open( x=100,y=100,width=800,height=600 )
   ;     OpenWindow( #PB_Any, 0,0,332,232, "" )
   ;     id_design_code = TreeGadget( -1,1,1,330,230 ) 
   
   Define flag = #PB_Window_SystemMenu | #PB_Window_SizeGadget | #PB_Window_MaximizeGadget | #PB_Window_MinimizeGadget
   Define root = widget::Open( 1, x,y,width,height, "ide", flag ) 
   window_ide = widget::GetWindow( root )
   canvas_ide = widget::GetGadget( root )
   
   
   toolbar_design = ToolBar( toolbar_design )
;    ToolBarButton(1,-1,0,"open" )
;    ToolBarButton( )
;    ToolBarButton( )
;    
;    ToolBarButton( )
;    ToolBarButton( )
;    
;    ToolBarButton( )
;    ToolBarButton( )
;    
;    ToolBarButton( )
;    ToolBarButton( )
;    ToolBarButton( )
;    ToolBarButton( )
;    
;    ToolBarButton( )
;    ToolBarButton( )
;    ToolBarButton( )
;    ToolBarButton( )
;    ToolBarButton( )
   CloseList( )
   
   ; gadgets
   
   ;\\\ 
   id_design_panel = Panel( 0,0,0,0 ) 
   AddItem( id_design_panel, -1, "Form" )
   id_design_form = Button( 0,0,0,0, "id_design_form", #__flag_autosize ) 
   
   AddItem( id_design_panel, -1, "Code" )
   id_design_code = Button( 0,0,0,0,"id_design_code", #__flag_autosize ) 
   CloseList( )
   
   ;
   listview_debug = Button( 0,0,0,0, "listview_debug" )
   
   
   ;\\ open inspector gadgets 
   id_i_view_tree = Button( 0,0,0,0,"id_i_view_tree" ) 
   
   ;\\ id_inspector_panel_open
   id_i_container_panel = Panel( 0,0,0,0 )
   
   ;\\ id_inspector_panel_item_1
   AddItem( id_i_container_panel, -1, "elements", 0, 0 ) 
   id_elements_tree = Button( 0,0,0,0, "id_elements_tree", #__flag_autosize  )
   
   ;\\ id_inspector_panel_item_2 
   AddItem( id_i_container_panel, -1, "properties", 0, 0 )  
   id_i_properties_tree = Button( 0,0,0,0,"id_i_properties_tree",  #__flag_autosize  )
   
   ;\\ id_inspector_panel_item_3 
   AddItem( id_i_container_panel, -1, "events", 0, 0 )  
   id_i_events_tree = Button( 0,0,0,0, "id_i_events_tree", #__flag_autosize  ) 
   
   ;\\ id_inspector_panel_close
   CloseList( )
   
   ;\\ id_inspector_help_text
   id_i_help_text  = Button( 0,0,0,0, "help for the inspector" )
   ;\\ close inspector gadgets 
   
   ;
   ;\\ ide splitters
   Splitter_design = widget::Splitter( 0,0,0,0, toolbar_design,id_design_panel, #PB_Splitter_FirstFixed | #PB_Splitter_Separator )
   Splitter_inspector = widget::Splitter( 0,0,0,0, id_i_view_tree,id_i_container_panel, #PB_Splitter_FirstFixed )
   splitter_debug = widget::Splitter( 0,0,0,0, Splitter_design,listview_debug, #PB_Splitter_SecondFixed )
   splitter_help = widget::Splitter( 0,0,0,0, Splitter_inspector,id_i_help_text, #PB_Splitter_SecondFixed )
   Splitter_ide = widget::Splitter( 0,0,0,0, splitter_debug,splitter_help, #__flag_autosize | #PB_Splitter_Vertical | #PB_Splitter_SecondFixed )
   
   ;\\ set splitters default minimum size
   widget::SetAttribute( Splitter_ide, #PB_Splitter_FirstMinimumSize, 500 )
   widget::SetAttribute( Splitter_ide, #PB_Splitter_SecondMinimumSize, 120 )
   widget::SetAttribute( splitter_help, #PB_Splitter_SecondMinimumSize, 30 )
   widget::SetAttribute( splitter_debug, #PB_Splitter_FirstMinimumSize, 300 )
   widget::SetAttribute( splitter_debug, #PB_Splitter_SecondMinimumSize, 100 )
   widget::SetAttribute( Splitter_inspector, #PB_Splitter_FirstMinimumSize, 100 )
   widget::SetAttribute( Splitter_design, #PB_Splitter_FirstMinimumSize, 20 )
   widget::SetAttribute( Splitter_design, #PB_Splitter_SecondMinimumSize, 200 )
   ; widget::SetAttribute( Splitter_design, #PB_Splitter_SecondMinimumSize, $ffffff )
   
   ;\\ set splitters dafault positions
   widget::SetState( Splitter_ide, widget::WidgetWidth( Splitter_ide )-220 )
   widget::SetState( splitter_help, widget::WidgetHeight( splitter_help )-80 )
   widget::SetState( splitter_debug, widget::WidgetHeight( splitter_debug )-200 )
   widget::SetState( Splitter_inspector, 230 )
   widget::SetState( Splitter_design, 42 )
   
   ProcedureReturn window_ide
EndProcedure

;-
CompilerIf #PB_Compiler_IsMainFile 
   ide_open( )
   

   WaitClose( )
CompilerEndIf


;\\ include images
DataSection   
   ;IncludePath "include/images"
   IncludePath #IDE_path + "ide/include/images"
   
   widget_delete:    : IncludeBinary "delete1.png"
   widget_paste:     : IncludeBinary "paste.png"
   widget_copy:      : IncludeBinary "copy.png"
   widget_cut:       : IncludeBinary "cut.png"
   
   group:            : IncludeBinary "group/group.png"
   group_un:         : IncludeBinary "group/group_un.png"
   group_top:        : IncludeBinary "group/group_top.png"
   group_left:       : IncludeBinary "group/group_left.png"
   group_right:      : IncludeBinary "group/group_right.png"
   group_bottom:     : IncludeBinary "group/group_bottom.png"
   group_width:      : IncludeBinary "group/group_width.png"
   group_height:     : IncludeBinary "group/group_height.png"
EndDataSection

; IDE Options = PureBasic 6.12 LTS (Windows - x64)
; CursorPosition = 6
; FirstLine = 2
; Folding = -
; Optimizer
; EnableXP