@Title For : Next

@Syntax

  @Keyword For <variable> = <expression1> @Keyword To <expression2> [@Keyword Step <constant>]
    ...
  @Keyword Next [<variable>]

@Description

  @Keyword For : @Keyword Next is used to create a loop within a program with the given parameters.
  At each loop the <variable> value is increased by a 1, (or of the "Step value" if a @Keyword Step value 
  is specified) and when the <variable> value is above the <expression2> value, the loop stop. 
  @LineBreak
  @LineBreak
  With the @ReferenceLink "Break_Continue" Break command its possible to exit the @Keyword For : @Keyword Next loop at any moment,
  with the @ReferenceLink "Break_Continue" Continue command the end of the current iteration can be skipped. 
  @LineBreak
  @LineBreak
  The @Keyword "For : Next" loop works only with integer values, at the expressions as well 
  at the @Keyword "Step" constant. The @Keyword "Step" constant can also be negative.

@Example 

@Code
  For k = 0 To 10 
    Debug k
  Next
@EndCode
    
  In this example, the program will loop 11, time (0 to 10), then quit.

@Example 

@Code
  For k = 10 To 1 Step -1
    Debug k
  Next
@EndCode
    
  In this example, the program will loop 10 times (10 to 1 backwards), then quit.

@Example 

@Code
  a = 2
  b = 3 
  For k = a+2 To b+7 Step 2
    Debug k
  Next k  
@EndCode

  Here, the program will loop 4 times before quitting, (k is increased by a value of 2 at each loop, 
  so the k value is: 4-6-8-10). The "k" after the "Next" indicates that "Next" is ending the "For k" loop.
  If another variable, is used the compiler will generate an error. It can be useful to nest several "For/Next" loops.

@Example

@Code
  For x=0 To 10 
    For y=0 To 5
      Debug "x: " + x + " y: " + y
    Next y
  Next x
@EndCode

  @Bold Note: Be aware, that in SpiderBasic the value of <expression2> ('To' value) can also be changed inside 
  the For : Next loop. This can lead to endless loops when wrongly used. 
